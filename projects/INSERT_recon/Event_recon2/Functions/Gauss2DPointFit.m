function [fitresult, gof] = Gauss2DPointFit(X, Y, data,Par)
%CREATEFIT(X,Y,DATA)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : X
%      Y Input : Y
%      Z Output: data
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 27-Jan-2017 12:46:05


%% Fit: 'untitled fit 1'.
[xData, yData, zData] = prepareSurfaceData( X, Y, data );

% Set up fittype and options.
ft = fittype( 'a*exp(-(((x-xc)/sqrt(2)/sigma_x)^2 + ((y-yc)/sqrt(2)/sigma_y)^2))+ base', 'independent', {'x', 'y'}, 'dependent', 'z' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
% opts.StartPoint = [0.968171371752179 0.163569909784993 0.665987216411111 0.51655820835127 0.894389375354243];
opts.Lower = [0 0 0 0 min(X(:)) min(Y(:))];
opts.StartPoint = [0.9*max(data(:)) min(data(:)) 1/2.355/Par.pixel 1/2.355/Par.pixel  mean(X(:)) mean(Y(:))];
opts.Upper = [max(data(:)) 2*min(data(:)) 5/2.355/Par.pixel 5/2.355/Par.pixel max(X(:)) max(Y(:))];
% Fit model to data.
[fitresult, gof] = fit( [xData, yData], zData, ft, opts );

% % Plot fit with data.
% figure( 'Name', 'untitled fit 1' );
% h = plot( fitresult, [xData, yData], zData );
% legend( h, 'untitled fit 1', 'data vs. X, Y', 'Location', 'NorthEast' );
% % Label axes
% xlabel X
% ylabel Y
% zlabel data
% grid on
% view( -99.1, 2.8 );


